{"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":7,"numPassedTests":63,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":8,"numTotalTests":64,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1653468527960,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["register anggota use cases"],"failureMessages":[],"fullName":"register anggota use cases should make an anggota","location":null,"status":"passed","title":"should make an anggota"},{"ancestorTitles":["register anggota use cases"],"failureMessages":[],"fullName":"register anggota use cases should throw an error when email is the same","location":null,"status":"passed","title":"should throw an error when email is the same"},{"ancestorTitles":["register anggota use cases"],"failureMessages":[],"fullName":"register anggota use cases should throw an error when body is incorrect","location":null,"status":"passed","title":"should throw an error when body is incorrect"},{"ancestorTitles":["register anggota use cases"],"failureMessages":[],"fullName":"register anggota use cases should throw an error when password is less than 5 character","location":null,"status":"passed","title":"should throw an error when password is less than 5 character"},{"ancestorTitles":["login anggota use cases"],"failureMessages":[],"fullName":"login anggota use cases should throw an error when password is less than 5 character","location":null,"status":"passed","title":"should throw an error when password is less than 5 character"},{"ancestorTitles":["login anggota use cases"],"failureMessages":[],"fullName":"login anggota use cases should give header with jwt","location":null,"status":"passed","title":"should give header with jwt"},{"ancestorTitles":["login anggota use cases"],"failureMessages":[],"fullName":"login anggota use cases should have verifiable jwt","location":null,"status":"passed","title":"should have verifiable jwt"}],"endTime":1653468530984,"message":"","name":"C:\\Users\\novel\\Documents\\Pemrograman\\Backend\\Express js\\devgirls\\tests\\use-cases\\anggota.test.js","startTime":1653468528101,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Anggota Model"],"failureMessages":[],"fullName":"Anggota Model should create 1 data","location":null,"status":"passed","title":"should create 1 data"},{"ancestorTitles":["Anggota Model"],"failureMessages":[],"fullName":"Anggota Model can be updated","location":null,"status":"passed","title":"can be updated"},{"ancestorTitles":["Acara Model"],"failureMessages":[],"fullName":"Acara Model should create 1 data","location":null,"status":"passed","title":"should create 1 data"},{"ancestorTitles":["Acara Model"],"failureMessages":[],"fullName":"Acara Model can be updated","location":null,"status":"passed","title":"can be updated"},{"ancestorTitles":["Acara Model"],"failureMessages":[],"fullName":"Acara Model can be add to anggota","location":null,"status":"passed","title":"can be add to anggota"},{"ancestorTitles":["Acara Model"],"failureMessages":[],"fullName":"Acara Model should has many to many relation with anggota","location":null,"status":"passed","title":"should has many to many relation with anggota"},{"ancestorTitles":["Acara Model"],"failureMessages":["Error: \n    at Query.run (C:\\Users\\novel\\Documents\\Pemrograman\\Backend\\Express js\\devgirls\\node_modules\\sequelize\\src\\dialects\\postgres\\query.js:76:25)\n    at C:\\Users\\novel\\Documents\\Pemrograman\\Backend\\Express js\\devgirls\\node_modules\\sequelize\\src\\sequelize.js:643:28\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at PostgresQueryInterface.insert (C:\\Users\\novel\\Documents\\Pemrograman\\Backend\\Express js\\devgirls\\node_modules\\sequelize\\src\\dialects\\abstract\\query-interface.js:773:21)\n    at model.save (C:\\Users\\novel\\Documents\\Pemrograman\\Backend\\Express js\\devgirls\\node_modules\\sequelize\\src\\model.js:4059:35)\n    at Function.create (C:\\Users\\novel\\Documents\\Pemrograman\\Backend\\Express js\\devgirls\\node_modules\\sequelize\\src\\model.js:2266:12)\n    at Object.<anonymous> (C:\\Users\\novel\\Documents\\Pemrograman\\Backend\\Express js\\devgirls\\tests\\model.test.js:81:25)"],"fullName":"Acara Model should has many to many relation with kategori","location":null,"status":"failed","title":"should has many to many relation with kategori"},{"ancestorTitles":["Artikel Model"],"failureMessages":[],"fullName":"Artikel Model should create 1 data","location":null,"status":"passed","title":"should create 1 data"},{"ancestorTitles":["Artikel Model"],"failureMessages":[],"fullName":"Artikel Model should has many to 1 realtion with user","location":null,"status":"passed","title":"should has many to 1 realtion with user"}],"endTime":1653468532350,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAcara Model › should has many to many relation with kategori\u001b[39m\u001b[22m\n\n\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 79 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 80 |\u001b[39m   it(\u001b[32m'should has many to many relation with kategori'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 81 |\u001b[39m     \u001b[36mconst\u001b[39m newKategori \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mKategori\u001b[39m\u001b[33m.\u001b[39mcreate({label\u001b[33m:\u001b[39m \u001b[32m\"programming\"\u001b[39m})\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 82 |\u001b[39m     \u001b[36mawait\u001b[39m newAcara\u001b[33m.\u001b[39maddKategori(newKategori)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m kategoriAcara \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m newAcara\u001b[33m.\u001b[39mcountKategoris()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 |\u001b[39m     expect(kategoriAcara)\u001b[33m.\u001b[39mtoEqual(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Query.run (\u001b[22m\u001b[2mnode_modules/sequelize/src/dialects/postgres/query.js\u001b[2m:76:25)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/sequelize/src/sequelize.js\u001b[2m:643:28\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat PostgresQueryInterface.insert (\u001b[22m\u001b[2mnode_modules/sequelize/src/dialects/abstract/query-interface.js\u001b[2m:773:21)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat model.save (\u001b[22m\u001b[2mnode_modules/sequelize/src/model.js\u001b[2m:4059:35)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.create (\u001b[22m\u001b[2mnode_modules/sequelize/src/model.js\u001b[2m:2266:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/model.test.js\u001b[39m\u001b[0m\u001b[2m:81:25)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\novel\\Documents\\Pemrograman\\Backend\\Express js\\devgirls\\tests\\model.test.js","startTime":1653468531038,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["add acara use case"],"failureMessages":[],"fullName":"add acara use case should throw an error when body is empty","location":null,"status":"passed","title":"should throw an error when body is empty"},{"ancestorTitles":["add acara use case"],"failureMessages":[],"fullName":"add acara use case should throw an error when the date is less than today","location":null,"status":"passed","title":"should throw an error when the date is less than today"},{"ancestorTitles":["add acara use case"],"failureMessages":[],"fullName":"add acara use case should create a new acara","location":null,"status":"passed","title":"should create a new acara"},{"ancestorTitles":["get acara usecase"],"failureMessages":[],"fullName":"get acara usecase should return array","location":null,"status":"passed","title":"should return array"},{"ancestorTitles":["get acara usecase"],"failureMessages":[],"fullName":"get acara usecase should have id, date, description, title, or empty array","location":null,"status":"passed","title":"should have id, date, description, title, or empty array"},{"ancestorTitles":["get acara usecase"],"failureMessages":[],"fullName":"get acara usecase should filter title & description","location":null,"status":"passed","title":"should filter title & description"},{"ancestorTitles":["get acara usecase"],"failureMessages":[],"fullName":"get acara usecase should has pagination","location":null,"status":"passed","title":"should has pagination"},{"ancestorTitles":["get acara by id usecase"],"failureMessages":[],"fullName":"get acara by id usecase should throw an error when there is no params","location":null,"status":"passed","title":"should throw an error when there is no params"},{"ancestorTitles":["get acara by id usecase"],"failureMessages":[],"fullName":"get acara by id usecase should throw an error when the id is not found","location":null,"status":"passed","title":"should throw an error when the id is not found"},{"ancestorTitles":["get acara by id usecase"],"failureMessages":[],"fullName":"get acara by id usecase should found 1 id when the id is found","location":null,"status":"passed","title":"should found 1 id when the id is found"},{"ancestorTitles":["remove artikel use case"],"failureMessages":[],"fullName":"remove artikel use case should return artikel id","location":null,"status":"passed","title":"should return artikel id"},{"ancestorTitles":["remove artikel use case"],"failureMessages":[],"fullName":"remove artikel use case should return error when the id is empty","location":null,"status":"passed","title":"should return error when the id is empty"},{"ancestorTitles":["remove artikel use case"],"failureMessages":[],"fullName":"remove artikel use case should throw an error when it dosnt exist","location":null,"status":"passed","title":"should throw an error when it dosnt exist"},{"ancestorTitles":["register acara use case"],"failureMessages":[],"fullName":"register acara use case should throw an error when there is no params","location":null,"status":"passed","title":"should throw an error when there is no params"},{"ancestorTitles":["register acara use case"],"failureMessages":[],"fullName":"register acara use case should throw an error when the user is not auth","location":null,"status":"passed","title":"should throw an error when the user is not auth"},{"ancestorTitles":["register acara use case"],"failureMessages":[],"fullName":"register acara use case should registered and cannot registered twice","location":null,"status":"passed","title":"should registered and cannot registered twice"},{"ancestorTitles":["get anggota acara use case"],"failureMessages":[],"fullName":"get anggota acara use case should return an array","location":null,"status":"passed","title":"should return an array"}],"endTime":1653468535260,"message":"","name":"C:\\Users\\novel\\Documents\\Pemrograman\\Backend\\Express js\\devgirls\\tests\\use-cases\\acara.test.js","startTime":1653468532393,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["add artikel use cases"],"failureMessages":[],"fullName":"add artikel use cases should return artikel","location":null,"status":"passed","title":"should return artikel"},{"ancestorTitles":["add artikel use cases"],"failureMessages":[],"fullName":"add artikel use cases should return error when the body is not rigth","location":null,"status":"passed","title":"should return error when the body is not rigth"},{"ancestorTitles":["remove artikel use cases"],"failureMessages":[],"fullName":"remove artikel use cases should return artikel id","location":null,"status":"passed","title":"should return artikel id"},{"ancestorTitles":["remove artikel use cases"],"failureMessages":[],"fullName":"remove artikel use cases should return error when the id is empty","location":null,"status":"passed","title":"should return error when the id is empty"},{"ancestorTitles":["remove artikel use cases"],"failureMessages":[],"fullName":"remove artikel use cases should throw an error when it dosnt exist","location":null,"status":"passed","title":"should throw an error when it dosnt exist"},{"ancestorTitles":["get artikel use cases"],"failureMessages":[],"fullName":"get artikel use cases should return array","location":null,"status":"passed","title":"should return array"},{"ancestorTitles":["get artikel use cases"],"failureMessages":[],"fullName":"get artikel use cases should have id, date, description, title, or empty array","location":null,"status":"passed","title":"should have id, date, description, title, or empty array"},{"ancestorTitles":["get artikel use cases"],"failureMessages":[],"fullName":"get artikel use cases should filter title & description","location":null,"status":"passed","title":"should filter title & description"},{"ancestorTitles":["get artikel use cases"],"failureMessages":[],"fullName":"get artikel use cases should has pagination","location":null,"status":"passed","title":"should has pagination"},{"ancestorTitles":["get artikel by id use cases"],"failureMessages":[],"fullName":"get artikel by id use cases should throw an error when there is no params","location":null,"status":"passed","title":"should throw an error when there is no params"},{"ancestorTitles":["get artikel by id use cases"],"failureMessages":[],"fullName":"get artikel by id use cases should throw an error when the id is not found","location":null,"status":"passed","title":"should throw an error when the id is not found"},{"ancestorTitles":["get artikel by id use cases"],"failureMessages":[],"fullName":"get artikel by id use cases should found 1 id when the id is found","location":null,"status":"passed","title":"should found 1 id when the id is found"},{"ancestorTitles":["update artikel use case"],"failureMessages":[],"fullName":"update artikel use case should throw an error when there is no params","location":null,"status":"passed","title":"should throw an error when there is no params"},{"ancestorTitles":["update artikel use case"],"failureMessages":[],"fullName":"update artikel use case should change the artikel","location":null,"status":"passed","title":"should change the artikel"},{"ancestorTitles":["update artikel use case"],"failureMessages":[],"fullName":"update artikel use case should change the artikel title, description, and photo","location":null,"status":"passed","title":"should change the artikel title, description, and photo"}],"endTime":1653468538180,"message":"","name":"C:\\Users\\novel\\Documents\\Pemrograman\\Backend\\Express js\\devgirls\\tests\\use-cases\\artikel.test.js","startTime":1653468535341,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["get anggota usecase"],"failureMessages":[],"fullName":"get anggota usecase should return array","location":null,"status":"passed","title":"should return array"},{"ancestorTitles":["get anggota usecase"],"failureMessages":[],"fullName":"get anggota usecase should have id, name, email, and role","location":null,"status":"passed","title":"should have id, name, email, and role"},{"ancestorTitles":["get anggota usecase"],"failureMessages":[],"fullName":"get anggota usecase should filter name & email","location":null,"status":"passed","title":"should filter name & email"},{"ancestorTitles":["get anggota usecase"],"failureMessages":[],"fullName":"get anggota usecase should has pagination","location":null,"status":"passed","title":"should has pagination"},{"ancestorTitles":["make pengurus usecase"],"failureMessages":[],"fullName":"make pengurus usecase should throw an error when there is no id","location":null,"status":"passed","title":"should throw an error when there is no id"},{"ancestorTitles":["make pengurus usecase"],"failureMessages":[],"fullName":"make pengurus usecase should make anggota to pengurus","location":null,"status":"passed","title":"should make anggota to pengurus"}],"endTime":1653468539602,"message":"","name":"C:\\Users\\novel\\Documents\\Pemrograman\\Backend\\Express js\\devgirls\\tests\\use-cases\\pengurus.test.js","startTime":1653468538225,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["functions"],"failureMessages":[],"fullName":"functions get jwt payload","location":null,"status":"passed","title":"get jwt payload"}],"endTime":1653468540884,"message":"","name":"C:\\Users\\novel\\Documents\\Pemrograman\\Backend\\Express js\\devgirls\\tests\\functions.test.js","startTime":1653468539651,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["add kategori use case"],"failureMessages":[],"fullName":"add kategori use case should throw error when body is not right","location":null,"status":"passed","title":"should throw error when body is not right"},{"ancestorTitles":["add kategori use case"],"failureMessages":[],"fullName":"add kategori use case should return kategori","location":null,"status":"passed","title":"should return kategori"},{"ancestorTitles":["get kategori use case"],"failureMessages":[],"fullName":"get kategori use case should give all kategori","location":null,"status":"passed","title":"should give all kategori"},{"ancestorTitles":["get kategori use case"],"failureMessages":[],"fullName":"get kategori use case should give specific kategori kategori","location":null,"status":"passed","title":"should give specific kategori kategori"},{"ancestorTitles":["create kategori acara use case"],"failureMessages":[],"fullName":"create kategori acara use case should create asc","location":null,"status":"passed","title":"should create asc"},{"ancestorTitles":["create kategori acara use case"],"failureMessages":[],"fullName":"create kategori acara use case should throw error when asc already made","location":null,"status":"passed","title":"should throw error when asc already made"},{"ancestorTitles":["create kategori artikel use case"],"failureMessages":[],"fullName":"create kategori artikel use case should create asc","location":null,"status":"passed","title":"should create asc"},{"ancestorTitles":["create kategori artikel use case"],"failureMessages":[],"fullName":"create kategori artikel use case should throw error when asc already made","location":null,"status":"passed","title":"should throw error when asc already made"}],"endTime":1653468542498,"message":"","name":"C:\\Users\\novel\\Documents\\Pemrograman\\Backend\\Express js\\devgirls\\tests\\use-cases\\kategori.test.js","startTime":1653468540918,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Database Connection"],"failureMessages":[],"fullName":"Database Connection should not throw an error when connecting","location":null,"status":"passed","title":"should not throw an error when connecting"}],"endTime":1653468543244,"message":"","name":"C:\\Users\\novel\\Documents\\Pemrograman\\Backend\\Express js\\devgirls\\tests\\database.test.js","startTime":1653468542540,"status":"passed","summary":""}],"wasInterrupted":false}